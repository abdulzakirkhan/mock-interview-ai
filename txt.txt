  const fetchInterviews = async () => {
    if (!user?.primaryEmailAddress?.emailAddress) {
      toast.error("User email not found");
      return;
    }
  
    try {
      const response = await fetch('/api/fetchUserData', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          userEmail: user.primaryEmailAddress.emailAddress
        })
      });
  
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || 'Failed to fetch interview data');
      }
  
      const data = await response.json();
      
      // API already filters by email, so no need to filter again
      const userInterviews = data.userAnswers;
  
      setInterviewData(userInterviews);
  
      const totalInterviews = userInterviews.length;
    
      const bestScore = totalInterviews > 0 
        ? Math.max(...userInterviews.map(item => parseInt(item.rating || '0', 10)))
        : 0;
  
      const improvementRate = calculateImprovementRate(userInterviews);
  
      setStatsCards([
        {
          ...statsCards[0],
          value: totalInterviews
        },
        {
          ...statsCards[1],
          value: totalInterviews === 0 ? 'N/A' : `${bestScore}/10` 
        },
        {
          ...statsCards[2],
          value: totalInterviews > 1 ? `${improvementRate}%` : '0%'
        }
      ]);
  
     
  
    } catch (error) {
      toast.error(error.message || 'Failed to fetch interviews');
    }
  };